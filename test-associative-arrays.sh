#!/bin/bash
## test-associative-arrays
## version 0.0.1 - initial
##################################################
. ${SH2}/cecho.sh
sanitize-assoc-array() { 
  grep -e '^declare\s-A\s[a-z_]*=(\(\[[^]]*.="[^"]*.\s\)\+)$' -o |
  head -1
}
create-test-assoc-array() {
  {
    declare -A assoc_arr
    assoc_arr['a']=1
    assoc_arr['b']=2
    assoc_arr['c']=3
    declare -p assoc_arr
  } | sanitize-assoc-array
}
modify-test-assoc-array() {
  assoc_arr['a']=1
  assoc_arr['b']=2
  assoc_arr['c']=3
}
test-associative-arrays() {
  cecho green "testing associative arrays ..."
  cecho yellow "test i"
  cecho yellow "receive associative array returned by another function"
  cecho yellow "and set name to hash"
  cecho yellow "expect declare -A hash=([a]=\"1\" [b]=\"2\" [c]=\"3\" )"
  arr=$( create-test-assoc-array )
  eval ${arr/assoc_arr/hash} # instantiate within function
  declare -p hash
  unset hash
  cecho yellow "test ii"
  cecho yellow "receive associative array returned by another function"
  cecho yellow "and use as is"
  cecho yellow "expect declare -A hash=([a]=\"1\" [b]=\"2\" [c]=\"3\" )"
  eval $( create-test-assoc-array ) # instantiate within function
  declare -p assoc_arr
  unset assoc_arry
  cecho yellow "test iii"
  cecho yellow "modify associative array in another function"
  cecho yellow "expect declare -A hash=([a]=\"1\" [b]=\"2\" [c]=\"3\" )"
  declare -A assoc_arr
  modify-test-assoc-array
  declare -p assoc_arr
  cecho green "done testing associative arrays"
}
##################################################
if [ ${#} -eq 0 ] 
then
 true
else
 exit 1 # wrong args
fi
##################################################
test-associative-arrays
##################################################
## generated by create-stub2.sh v0.1.2
## on Sat, 06 Jul 2019 13:53:40 +0900
## see <https://github.com/temptemp3/sh2>
##################################################
